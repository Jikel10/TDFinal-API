openapi: 3.0.3
info:
  title: Football Competition Management API
  description: API for managing football competitions, teams, and players.
  version: 1.0.0

servers:
  - url: https://api.football-management.com/v1

components:
  schemas:
    Competition:
      type: object
      properties:
        name:
          type: string
          description: The name of the competition, e.g., LIGA.
        location:
          type: string
          description: The country or continent where the competition takes place, e.g., Spain or Europe.

    Team:
      type: object
      properties:
        name:
          type: string
          description: The name of the team.
        slogan:
          type: string
          description: The team's slogan.
        competitions:
          type: array
          items:
            $ref: '#/components/schemas/Competition'
          description: The list of competitions the team is participating in.
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'
          description: The list of players in the team.

    Player:
      type: object
      properties:
        name:
          type: string
          description: The name of the player.
        number:
          type: integer
          description: The player's number.
        preferredFoot:
          type: string
          enum:
            - Left
            - Right
          description: The player's preferred foot, either 'Left' or 'Right'.

  parameters:
    PageParam:
      in: query
      name: page
      required: true
      schema:
        type: integer
      description: The page number for pagination.

    PageSizeParam:
      in: query
      name: pageSize
      required: true
      schema:
        type: integer
      description: The number of items per page for pagination.

    TeamNameParam:
      in: query
      name: teamName
      required: false
      schema:
        type: string
      description: Filter teams by name.

    PlayerNameParam:
      in: query
      name: playerName
      required: false
      schema:
        type: string
      description: Filter players by name.

paths:
  /competitions:
    get:
      summary: Get a list of competitions
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
      responses:
        '200':
          description: A list of competitions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competition'
    post:
      summary: Create a new competition
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Competition'
      responses:
        '201':
          description: Competition created successfully

  /teams:
    get:
      summary: Get a list of teams
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - $ref: '#/components/parameters/TeamNameParam'
      responses:
        '200':
          description: A list of teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
    post:
      summary: Create a new team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: The name of the team
                slogan:
                  type: string
                  description: The team's slogan
      responses:
        '201':
          description: Team created successfully

  /teams/{teamId}/competitions:
    post:
      summary: Associate a team with competitions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Competition'
      responses:
        '200':
          description: Competitions associated successfully

  /teams/{teamId}/players:
    get:
      summary: Get a list of players for a specific team
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - $ref: '#/components/parameters/PlayerNameParam'
      responses:
        '200':
          description: A list of players
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Player'
    post:
      summary: Add a new player to the team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        '201':
          description: Player added successfully

    put:
      summary: Update a player's information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        '200':
          description: Player updated successfully
